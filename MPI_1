#include "stdafx.h"
#include <stdio.h>
#include <stdlib.h>
#include "mpi.h"
#include <omp.h>
#include <time.h>

bool judge(int num[]) {
	if (num[0] == 0)
	{
		return false;
	}
	int i = 0;
	int ans = 0;
	for (i = 0; i < 5; i++)
	{
		if (num[i] == num[i + 1])
		{
			return false;
		}
	}
	for (i = 0; i < 6; i++)
	{
		ans += num[i];
	}
	if (ans == 7 || ans == 11 || ans == 13)
	{
		return false;
	}
	return true;
}

int main(int argc, char *argv[])
{
	int global_cnt = 0;
	int np, rank, ierr;
	int t;
	clock_t start, finish;
	double  duration;
	start = clock();
	ierr = MPI_Init(&argc, &argv);
	MPI_Comm_rank(MPI_COMM_WORLD, &rank);
	MPI_Comm_size(MPI_COMM_WORLD, &np);
	/*PLACE YOUR CODE BELOW*/
	int nums[6];
	int i = 0, j = 0, k = 0;
	int local_cnt = 0;
	int temp = 0;
	if (rank != 0) {
		temp = rank;
		for (k = 0; k < 3; k++) {
			for (i = temp * 100000; i <= temp*100000+100000; i++)
				{
					t = i;
					for (j = 0; j < 6; j++)
					{
					
						nums[5 - j] = t % 10;
						t = t/10;
					}//分配数字到每一位上
					if (judge(nums))
					{
						local_cnt++;
					}
				}
			printf("线程%d的答案是：%d\n",rank,local_cnt);
			temp += 3;
		}
	}
	MPI_Reduce(&local_cnt, &global_cnt, 1, MPI_INT, MPI_SUM, 0, MPI_COMM_WORLD);
	ierr = MPI_Finalize();
	finish = clock();
	duration = (double)(finish - start) / CLOCKS_PER_SEC;
	printf("答案是：%d\n运行时间为：%f", global_cnt,duration);
	system("pause");
}
